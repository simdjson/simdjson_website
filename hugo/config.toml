baseurl = "https://simdjson.org/"
author = "Daniel Lemire"
title = "The simdjson library"
languageCode = "en-us"
theme = "hugof"
enableRobotsTXT = true
SectionPagesMenu = ["main", "social"]

[params.image]
ImageURL = "simdjsonlogo.png"
IconURL = "simdjsonlogo.png"
ImageCredit = "Picture credit: Egor Bogatov"

[params.meta]
description = "The simdjson library"
keywords = "open source, JSON, C++"

[params.hero]
herotitle = "Parsing gigabytes of JSON per second"
herodiscription = "JSON is everywhere on the Internet. Servers spend a <strong>lot</strong> of time parsing it. The simdjson library uses commonly available SIMD instructions and microparallel algorithms to break speed records. "
btnblue = "Browse the API"
btnblueurl = "https://simdjson.org/api/0.9.0/index.html"
btngreen = "The simdjson library on GitHub"
btngreenurl = "https://github.com/simdjson/simdjson"
[params.main]
contentOneTitle = "Highlights"
contentTwoTitle = "Features"
PostColumn = "![gigabytes per second on a skylake processor, GNU GCC](rome.png)"
contentOneBody = """
* **Fast:** Over 4x  faster than RapidJSON and 25x faster than JSON for Modern C++.
* **Easy:** First-class, easy to use and carefully documented APIs.
* **Strict:** Full JSON and UTF-8 validation, lossless parsing. Performance with no compromises.
* **Automatic:** Selects a CPU-tailored parser at runtime. No configuration needed.
* **Reliable:** From memory allocation to error handling, simdjson's design avoids surprises.
* **Peer Reviewed:** Our research appears in venues like VLDB Journal, Software: Practice and Experience.
* **Widely used:** Used by [Yandex](https://github.com/ClickHouse/ClickHouse), [Microsoft](https://github.com/microsoft/FishStore) and [Shopify](https://github.com/Shopify/heap-profiler). A dozen of ports and bindings have been published in Python, R, Ruby, PHP, C#, Rust, Swift, Go, etc.

This library is part of the [Awesome Modern C++](https://awesomecpp.com).
 """

contentTwoBody = """
* [**On Demand API**](https://github.com/simdjson/simdjson/blob/master/doc/ondemand.md) to reach massive speeds (4 GB/s). We think it is a better way to parse JSON documents.
* [**Minify JSON**](https://github.com/simdjson/simdjson/blob/master/doc/basics.md#minifying-json-strings-without-parsing)   at 6 GB/s
* [**Standalone UTF8 Validation**](https://github.com/simdjson/simdjson/blob/master/doc/basics.md#utf-8-validation-alone) at 30 GB/s
* [**Multithreaded processing**](https://github.com/simdjson/simdjson/blob/master/doc/basics.md#newline-delimited-json-ndjson-and-json-lines)  of gigantic Newline-Delimited JSON (ndjson) and related formats at 3.5 GB/s
* [**JSON Pointer**](https://github.com/simdjson/simdjson/blob/master/doc/basics.md#json-pointer) support so that you can query your document at high speed
* [**Support both conventional error handling (exceptions) as well as an error-code approach**](https://github.com/simdjson/simdjson/blob/master/doc/basics.md#error-handling): you can compile your C++ code with or without exception support.
* [**Runtime dispatch**](https://github.com/simdjson/simdjson/blob/master/doc/implementation-selection.md): the library automatically detects the features supported by the processor. The library runs on all 64-bit systems, but it automagically benefits from advanced processors.

It is found on [Ubuntu](https://packages.ubuntu.com/source/eoan/simdjson) and [Debian](https://packages.debian.org/unstable/source/simdjson), FreeBSD, [MSYS2](https://github.com/simdjson/simdjson/wiki/MSYS2), brew, conan and [vcpkg](https://github.com/simdjson/simdjson/wiki/vcpkg).
"""



[params.footer]
emailtext = "Get in touch"
email = "lemire@gmail.com"
[[menu.main]]
name = "About"
url = "/about"

[[menu.main]]
name = "Software"
url = "/software"

[[menu.main]]
name = "Publications"
url = "/publications"

[[menu.main]]
name = "Talks"
url = "/talks"


[[menu.social]]
name = "Google Groups"
url = "https://groups.google.com/forum/#!forum/the-simdjson-library"

[[menu.social]]
name = "Github"
url = "http://github.com/simdjson/simdjson"

[markup]
  [markup.highlight]
    codeFences = true
    guessSyntax = false
    hl_Lines = ""
    lineNoStart = 1
    lineNos = false
    lineNumbersInTable = true
    noClasses = true
    style = "github"
    tabWidth = 4